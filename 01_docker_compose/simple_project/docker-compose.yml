version: '3.8'
services:

  backend:
    build: ./app
    container_name: backend
    env_file: 
      - .env
    volumes:
      - ./app:/opt/app
    expose:
      - "8000"
    networks:
      - etube
    healthcheck:
      test: curl http://backend:8000 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./static/data:/data/:ro
      - ./static/errors:/var/www/errors/:ro
      - ./static/django:/var/www/django/static/:ro
      - ./static/log/access.log:/var/log/nginx/access.log:rw
      - ./static/log/error.log:/var/log/nginx/error.log:rw
    depends_on:
      backend:
        condition: service_healthy
      db: 
        condition: service_healthy
    ports:
      - "80:80"
    networks:
      - etube

  db:
    image: postgres:13
    container_name: db
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: pg_isready -U ${DB_USER} -D ${DB_NAME} > /dev/null; if [[ $$? == 0 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - etube
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - etube-postgres-data:/var/lib/postgresql/data

networks:
  etube:
    driver: bridge

volumes:
  etube-postgres-data: